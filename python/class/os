import os
 

os.name
os.uname()
os.environ
os.environ.get('key')

# 查看当前目录的绝对路径:
>>> os.path.abspath('.')
'/Users/michael'
# 在某个目录下创建一个新目录，首先把新目录的完整路径表示出来:
>>> os.path.join('/Users/michael', 'testdir')
'/Users/michael/testdir'
# 然后创建一个目录:
>>> os.mkdir('/Users/michael/testdir')
# 删掉一个目录:
>>> os.rmdir('/Users/michael/testdir')

os.path.split()拆分路径
os.path.splitext()可以直接让你得到文件扩展名，

    要列出所有的.py文件，也只需一行代码：

    >>> [x for x in os.listdir('.') if os.path.isfile(x) and os.path.splitext(x)[1]=='.py']
    ['apis.py', 'config.py', 'models.py', 'pymonitor.py', 'test_db.py', 'urls.py', 'wsgiapp.py']



---jion
用法：将多个路径组合后返回

语法：os.path.join(path1[,path2[,path3[,...[,pathN]]]])

返回值：将多个路径组合后返回
支持str、list、tuple、dict

注意：第一个/绝对路径\之前的参数将会被忽略
合并路径

>>> import os
>>> os.path.join('/my/','name/is/','vampire_techking')
'/my/name/is/vampire_techking'
>>> os.path.join('/my/','name/is/','/vampire_techking')
'/vampire_techking'
>>> os.path.join('/my/','/name/is/','vampire_techking')
'/name/is/vampire_techking'


--进程 线程
#子进程获得父进程PID
os.geippid()
