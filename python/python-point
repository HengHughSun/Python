classinfo: int，float，bool，complex，str(字符串)，list，dict(字典)，set，tuple

function 函数 
	Built-in Function 
		print（）  sorted（） len()
		yield() 生成器generator ---next()
        isinstance()isinstance() 函数来判断一个对象是否是一个已知的类型，类似 type()。isinstance(object, classinfo)
            isinstance() 与 type() 区别：
            type() 不会认为子类是一种父类类型，不考虑继承关系。
            isinstance() 会认为子类是一种父类类型，考虑继承关系。
            如果要判断两个类型是否相同推荐使用 isinstance()。
        bin()二进制 
        hex()把一个整数转换成十六进制表示的字符串
    高级用法
        递归
        切片
        迭代
        列表生成式即List Comprehensions [x * x for x in range(1, 11)]
                                    [1, 4, 9, 16, 25, 36, 49, 64, 81, 100]
    

statement/sentence 声明/句子、命题  def   del  for 
attribute 属性
class 类,对象
    python内置的类 
        math、functools、
    class中的method 数据封装
method 类函数，方法 | 给对象发消息实际上就是调用对象对应的关联函数，我们称之为对象的方法Method
    .pop（）  .sort（） .remove()

bart = Student('Bart Simpson', 59)
lisa = Student('Lisa Simpson', 87)
bart.print_score()
lisa.print_score()

类名应采用驼峰命名法 ,即将类名中的每个单词的首字母都大写,而不使用下划线。
实例名和模块名都采用小写格式,并在单词之间加上下划线。
正常的函数和变量名是公开的（public），可以被直接引用，比如：abc，x123，PI等；

类似__xxx__这样的变量是特殊变量，可以被直接引用，但是有特殊用途，比如上面的__author__，__name__就是特殊变量，hello模块定义的文档注释也可以用特殊变量__doc__访问，我们自己的变量一般不要用这种变量名；

类似_xxx和__xxx这样的函数或变量就是非公开的（private），不应该被直接引用，比如_abc，__abc等；


组合:支持嵌套 key具有唯一性
        list 列表，数组
        tuple 固定列表，固定数组
        dict  dictionary字典
        set  集合 类似于列表,但输出的每个元素都必须是独一无二的

------------print
print() 是等内容全部执行完，在输出的#print(2,3,1/2)  2,3,0.5
'''XXXX加回车'''表示多行内容
    print('''line1
    line2
    line3''')
r'XXXX'  表示‘’内部的字符串不转义、转义字符\后必须跟东西不能是单个
多行和r可以联用
    print(r'''hello,\n
    world''')
设定 sep 参数来修改分隔符
    print(sep( )) 以空格分割
    >>> print("Hello","World", sep="***")
    Hello***World
    每一行输出都默认以新行字符(>>>)结束, 使用 end 参数也能改变结束方式
    >>> print("Hello","World", end="***")
    Hello World***>>>
格式化字符串
    print("%s is %d years old." % (aName, age))
字符 输出格式
d,i 整型
u   无符号整型
f   浮点型,如 m.ddddd
e   浮点型,如 m.ddddde+/-xx
E   浮点型,如 m.dddddE+/-xx
g   指数比-4 小或比 5 大时使用%e,否则使用%f
c   单字符
s   字符串或者是能通过 str()转为字符串的数据
%   输入一个%
除了转换字符之外,你也可以在%和转换字符之间插入格式修饰符。格式修饰符可以用一段给定
长度的空格使变量实现左对齐或者右对齐。格式修饰符也可在小数点后添加数字,来指定字段宽度。
表 10 给出了这些格式修饰符的使用。
修饰符类型 例子  描述
number  %20d     变量值占据 20 个字符宽度
-       %-20d    变量值占据 20 个字符宽度,左对齐
+       %+20d    变量值占据 20 个字符宽度,右对齐
0       %020d    变量值占据 20 个字符宽度,前置“0”
.       %20.2f   变量值占据 20 个字符宽度,且保留两位小数
(name) %(name)d  从字典中取 key 为 name 的值放在此处

-----string 字符串
rstrip(),lstrip() 和 strip() 剔除后面、前面、前后的空白
upper()          # 把所有字符中的小写字母转换成大写字母
lower()          # 把所有字符中的大写字母转换成小写字母
capitalize()     # 把第一个字母转化为大写字母，其余小写,即整句话的首字母大写
title()          # 把每个单词的第一个字母转化为大写，其余小写，即每个单词的首字母大写
replace("","")   # 从X字符替换为Y字符
split(",")       # 如果找到分隔符的实例，将字符串拆分为子字符串
center(w)        # 返回一个字符串,w 长度,原字符串居中
ljust(w)         #居左
rjust(w)         #居右 
find('item')     #查询 item,返回第一个匹配的索引位置,给出下标  等同与list.index('')
count(item) 返回原字符串中出现 item 的次数


----list 
///range(101)相当于range(0,101)生成的序列是从0开始小于101的整数：==sequence Shell：seq((0..100)) 
//range()还可以指定步长range(0,101,2)生成的序列是从0开始小于101的偶数，步数支持负数 注意range只是生成数据 引用需要赋值
----random
随机数 random.randint(a,b)
选择   random.choice()
在Python中，定义一个函数要使用def语句，依次写出函数名、括号、括号中的参数和冒号:，然后，在缩进块中编写函数体，函数的返回值用return语句返回。

如果知道最终要测试的条件,应考虑使用一个 elif 代码块来代替 else 代码块。这样,你就可以肯定,仅当满足相应的条件时,你的代码才会执行。
避免恶意尝试，或者攻击

as 可以为模块和函数取别名
import module_name (as X)
from module_name import function_name1,function_name2 
from module_name import function_name (as fn)
from module_name import * == import module_name

打开文件时,可指定读取模式 ( 'r' )、写入模式 ( 'w' )、附加模式 ( 'a' )或让你能够读取和写入文件的模式( 'r+' )

plot()折线图
scatter()散点图



数字处理方式
    ValueError: invalid literal for int() with base 10: '1127437398.85751'
可以选转换为float在转换为整数


生成器都是Iterator对象，但list、dict、str虽然是Iterable，却不是Iterator。

把list、dict、str等Iterable变成Iterator可以使用iter()函数：
凡是可作用于for循环的对象都是Iterable类型；

凡是可作用于next()函数的对象都是Iterator类型，它们表示一个惰性计算的序列；


返回闭包时牢记一点：返回函数不要引用任何循环变量，或者后续会发生变化的变量。
